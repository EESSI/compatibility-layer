# Defaults file for the compatibility layer role.
---
eessi_version: "2023.04"

custom_overlays:
  - name: eessi
    source: git
    url: https://github.com/EESSI/gentoo-overlay.git
    eclass-overrides: true

cvmfs_repository: pilot.eessi-hpc.org

gentoo_prefix_path: /cvmfs/{{ cvmfs_repository }}/versions/{{ eessi_version }}/compat/{{ eessi_host_os }}/{{ eessi_host_arch }}

# How to build the prefix.
gentoo_git_repo: https://github.com/gentoo/gentoo.git
# Select a specific commit in the gentoo_git_repo that should be used for the bootstrap,
# e.g. by checking: https://github.com/gentoo/gentoo/commits/master
# March 7 (4ca74e7abe4f2b14e686267b517c59d43bb580b4)
# gentoo_git_commit: 4ca74e7abe4f2b14e686267b517c59d43bb580b4
# April 4 (b9ebfbaef10f4740671c8bd90c6d2c929f8379bc) --> failed with circular dependencies (cmake, curl, nghttp2), cmake was update early on April 5
# gentoo_git_commit: b9ebfbaef10f4740671c8bd90c6d2c929f8379bc
# April 5 (8c0ce1bcd089d5badcb39afce98111bf4cfbc8f0)
# gentoo_git_commit: 8c0ce1bcd089d5badcb39afce98111bf4cfbc8f0
# March 13 (3a38f9b245e674722d5d58dfbb6baafca2b26975) commit which introduced
# version 1.52.0 of nghttp2 (this commit switched to using cmake and likely
# caused a circular dependency)
# gentoo_git_commit: 3a38f9b245e674722d5d58dfbb6baafca2b26975
# March 13 (7db97f5a3fc7ca8eced2a94e5f9481f7556cf908) one commit before
# 3a38f9b245e674722d5d58dfbb6baafca2b26975
gentoo_git_commit: 7db97f5a3fc7ca8eced2a94e5f9481f7556cf908
prefix_required_space: 15 GB
prefix_default_gcc: 9.5.0
prefix_user_defined_trusted_dirs:
  - "/cvmfs/{{ cvmfs_repository }}/host_injections/{{ eessi_version }}/compat/{{ eessi_host_os }}/{{ eessi_host_arch }}/lib"
prefix_mask_packages: |
  # stick to GCC 9.x; using a too recent compiler in the compat layer complicates stuff in the software layer,
  # see for example https://github.com/EESSI/software-layer/issues/151
  >=sys-devel/gcc-10
prefix_unmask_packages: |
  # unmask older GCC to make it installable
  =sys-devel/gcc-9*
prefix_bootstrap_use_flags: |
  # make sure that gold linker is installed with binutils
  sys-devel/binutils gold
prefix_use_builtin_bootstrap: false
prefix_custom_bootstrap_script:
  local: "{{ playbook_dir }}/../../bootstrap-prefix.sh"
  remote: /tmp/bootstrap-prefix.sh
prefix_source_options: "{{ gentoo_prefix_path }} noninteractive"
prefix_install: >-
    {{ prefix_use_builtin_bootstrap | ternary('/usr/local/bin/bootstrap-prefix.sh', prefix_custom_bootstrap_script.remote) }}
    {{ prefix_source_options }}

# Logging
eessi_log_dir: "/tmp/eessi-logs"
prefix_build_log: "{{ eessi_log_dir }}/prefix-build.log"
emerge_log: "{{ gentoo_prefix_path }}/var/log/emerge.log"

prefix_locales:
  - en_US.UTF-8 UTF-8

# By default, we install an architecture-specific set
package_sets:
  - "eessi-{{ eessi_version }}-{{ eessi_host_os }}-{{ eessi_host_arch }}"

prefix_packages:

prefix_remove_packages:
  - dev-lang/go
  - dev-lang/go-bootstrap

reframe_venv_dir: /tmp/reframe_venv

# List of locations that should get a symlink $EPREFIX/$LOCATION -> $LOCATION.
# This ensures that things like user/group ids are correct/looked up in the right way in the Prefix environment.
symlinks_to_host:
  # required to ensure local user groups are known
  - /etc/group

  # required to ensure local users are known (see https://github.com/EESSI/compatibility-layer/issues/15)
  - /etc/passwd

  # required to ensure that hosts specified in the host's hosts file can be resolved by tools in the Prefix
  - /etc/hosts

  # required to ensure name-service information is taken from the right source (e.g. ldap)
  - /etc/nsswitch.conf

  # required to use the DNS resolver from the host (should be done automatically)
  - /etc/resolv.conf

  # required to pick up the right timezone from the host
  - /etc/localtime

  # required if Centrify is used in nsswitch.conf
  - /lib64/libnss_centrifydc.so.2

  # required if LDAP is used in nsswitch.conf
  - /lib64/libnss_ldap.so.2

  # required if SSSD is used in nsswitch.conf
  - /lib64/libnss_sss.so.2

#  - /var/lib/munge
#  - /var/lib/unbound
#  - /var/lib/VirtualGL
#  - /var/log/munge
#  - /var/log/wtmp
#  - /var/run
#  - /var/spool
#  - /var/tmp
#  - /run/dbus
#  - /tmp
