# Make sure that glibc is always compiled with a user-defined-trusted-dirs option
---
- name: Check the EXTRA_EMAKE flags of glibc
  ansible.builtin.command: "equery has --package glibc EXTRA_EMAKE"
  changed_when: false
  failed_when: false
  register: glibc_extra_emake
  when: eessi_host_os == "linux"

- name: (Re)install glibc with the user-defined-trusted-dirs option
  community.general.portage:
    package: sys-libs/glibc
    noreplace: false
    oneshot: true
  become: false
  environment:
    EXTRA_EMAKE: "user-defined-trusted-dirs={{ prefix_user_defined_trusted_dirs | join(':') }}"
  when:
    - eessi_host_os == "linux"
    - glibc_extra_emake.stdout != "user-defined-trusted-dirs=" + ":".join(prefix_user_defined_trusted_dirs)

- name: Create portage env directory
  ansible.builtin.file:
    path: "{{ gentoo_prefix_path }}/etc/portage/env"
    state: directory
    mode: 0755

- name: Add env file for glibc to make sure the user-defined-trusted-dirs is always used
  ansible.builtin.copy:
    dest: "{{ gentoo_prefix_path }}/etc/portage/env/glibc-user-defined-trusted-dirs.conf"
    mode: 0644
    content: |
      EXTRA_EMAKE="user-defined-trusted-dirs={{ prefix_user_defined_trusted_dirs | join(':') }}"

- name: Add glibc env file to package.env
  ansible.builtin.lineinfile:
    path: "{{ gentoo_prefix_path }}/etc/portage/package.env"
    create: true
    mode: 0644
    line: sys-libs/glibc glibc-user-defined-trusted-dirs.conf
    state: present
